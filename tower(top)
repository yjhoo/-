package Tower;

import java.util.Scanner;

/**
 * 프로그래머스 문제 Top
 * 수평 직선에 높이가 서로 다른 탑 N대를 세웠습니다. 
 * 모든 탑의 꼭대기에는 신호를 송/수신하는 장치를 설치했습니다. 
 * 발사한 신호는 신호를 보낸 탑보다 높은 탑에서만 수신합니다. 
 * 또한, 한 번 수신된 신호는 다른 탑으로 송신되지 않습니다.
 * 예를 들어 높이가 6, 9, 5, 7, 4인 다섯 탑이 왼쪽으로 동시에 레이저 신호를 발사합니다. 
 * 그러면, 탑은 다음과 같이 신호를 주고받습니다. 
 * 높이가 4인 다섯 번째 탑에서 발사한 신호는 높이가 7인 네 번째 탑이 수신하고, 
 * 높이가 7인 네 번째 탑의 신호는 높이가 9인 두 번째 탑이, 
 * 높이가 5인 세 번째 탑의 신호도 높이가 9인 두 번째 탑이 수신합니다. 
 * 높이가 9인 두 번째 탑과 높이가 6인 첫 번째 탑이 보낸 레이저 신호는 어떤 탑에서도 수신할 수 없습니다.
 * @author 유정현
 *
 */
public class Tower {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner scan = new Scanner(System.in);
		int num = scan.nextInt(); // 입력받을 값의 갯수
		int[] arr = new int[num]; // tower의 높이 배열
		int[] arrs = new int[num]; // 수신받을 tower를 입력받을 배열
		// tower 높이 입력
		for(int i=0;i<num;i++) {
			arr[i] = scan.nextInt();
		}
		
		//수신받을 tower위치 입력
		arrs = Solution(arr);
		for(int i=0;i<num;i++) {
			System.out.println(arrs[i]);
		}
		scan.close();
	
	}
	
	//수신받을 tower의 위치를 구하는 매서드
	public int[] solution(int[] heights) {
        //답을 입력 받을 배열
        int[] answer = new int[heights.length];
        // 0으로 값 초기화
		for(int i=0;i<heights.length;i++) {
			answer[i] = 0;
		}
        // 배열의 뒷 쪽부터 확인
		for(int i=heights.length -1;i>0;i--) {
            // 전송탑에서 보낸 신호를 어느 탑에서 수신하는지 확인하고 저장
			for(int j = i-1;j>=0;j--) {
				if(heights[i]<heights[j]) {
					answer[i]=j+1;
					break;
				}
			}
		}
        return answer;

}
