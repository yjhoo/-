문제 설명
어떤 숫자에서 k개의 수를 제거했을 때 얻을 수 있는 가장 큰 숫자를 구하려 합니다.

예를 들어, 숫자 1924에서 수 두 개를 제거하면 [19, 12, 14, 92, 94, 24] 를 만들 수 있습니다. 이 중 가장 큰 숫자는 94 입니다.

문자열 형식으로 숫자 number와 제거할 수의 개수 k가 solution 함수의 매개변수로 주어집니다. number에서 k 개의 수를 제거했을 때 만들 수 있는 수 중 가장 큰 숫자를 문자열 형태로 return 하도록 solution 함수를 완성하세요.

제한 조건
number는 1자리 이상, 1,000,000자리 이하인 숫자입니다.
k는 1 이상 number의 자릿수 미만인 자연수입니다.

class Solution {
    public String solution(String number, int k) {
        int num = 0;
        // char 값으로 했을 때도 0이 1~9까지의 숫자보다 작기 때문에 비교 가능
        char max = '0';
        //이거 안쓰면 효율성 안나옴
        StringBuilder answer = new StringBuilder();
        // 처음 값이 0이면 0으로 반환
        if(max == number.charAt(0)){
            return "0";
        }
        // k만큼 수에서 빼야하기 때문에 총 길이는 number.length() - k 로 나와야함
        for(int i =  0 ; i  < number.length() - k; i++){
            // max값 초기화
            max = '0';
            // 자릿수는 무조건 number.length() - k 만큼이 되어야 하기 때문에 i + k 만큼의 제한을 둠
            // 숫자는 앞자리 수에 큰수가 들어가는 게 크기 때문에 앞에 부터 올 수 있는 가장 큰 수로 맞춰줌
            for(int j = num ; j <= i + k; j++){
                // target숫자가 max 값으로 사용되었으면 그 다음부터 비교 진행
                if(max < number.charAt(j)){
                    max = number.charAt(j);
                    num = j + 1;
                }
            }
            answer.append(max);
        }
        return answer.toString();
    }
}
